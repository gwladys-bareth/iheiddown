on:
  push:
    branches:
      - main

name: Binary creation

jobs:

  build:
    name: Build for ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release', artifact_name: '*.tar.gz', asset_name: macOS}
          - {os: windows-latest, r: 'release', artifact_name: '*.zip', asset_name: winOS}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest", artifact_name: '*.tar.gz', asset_name: linuxOS}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::rcmdcheck
            any::covr
            any::remotes
            any::rmarkdown
            any::modelsummary
            any::gt
            any::kableExtra
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        env:
          _R_CHECK_FORCE_SUGGESTS_: false
        with:
          upload-snapshots: true

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')

      - name: Install X11 dependencies on MacOS for pdftools
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz

      - name: Setup tinytex
        uses: r-lib/actions/setup-tinytex@main

      - name: Install GitHub dependencies
        run: |
          remotes::install_github("crsh/citr")
          remotes::install_github("gadenbuie/xaringanExtra")
          remotes::install_github("giocomai/ganttrify")
          remotes::install_github("mitchelloharawild/icons")
          remotes::install_github("ropensci/RefManageR")
        shell: Rscript {0}

      - name: Binary
        run: |
          pkgbuild::clean_dll()
          binary <- pkgbuild::build(binary = TRUE, needs_compilation = TRUE, compile_attributes = TRUE)
          dir.create("build")
          file.copy(binary, "build")
        shell: Rscript {0}

      - name: Save binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.asset_name }}
          path: build/

      - name: Install package
        if: runner.os == 'macOS'
        run: R CMD INSTALL .

      - name: Render output samples
        if: runner.os == 'macOS'
        run: Rscript R/_render.R

      - name: Save Thesis Sample as artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v2
        with:
          name: examples
          path: 00-Example/versions/

      - name: Save Syllabus Sample as artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v2
        with:
          name: SyllabusExample
          path: Untitled/

      - name: Save problem set sample as artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v2
        with:
          name: ProblemSetExample
          path: UntitledPS/

      - name: Remove Thesis project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("00-Example", recursive = TRUE)'

      - name: Remove Presentation project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("index", recursive = TRUE)'

      - name: Remove Syllabus project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("Untitled", recursive = TRUE)'

      - name: Remove problem set project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("UntitledPS", recursive = TRUE)'
      
      - name: Remove poster project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("UntitledPoster", recursive = TRUE)'

      - name: Remove poster betterland project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("UntitledPosterBetterland", recursive = TRUE)'

      - name: Remove poster betterport project
        if: runner.os == 'macOS'
        run: Rscript -e 'unlink("UntitledPosterBetterport", recursive = TRUE)'

      - name: Calculate code coverage
        run: Rscript -e "covr::codecov()"

  release:
    name: Bump version and release
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout one
        uses: actions/checkout@main
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        id: newtag
        uses: anothrNick/github-tag-action@1.39.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main

      - name: Checkout two
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.newtag.outputs.tag }}
          name: Release ${{ steps.newtag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Download binaries
        uses: actions/download-artifact@v2

      - name: Display structure of downloaded files
        run: ls -R

      - name: Rename Mac release
        run: mv ./macOS/*.tgz iheidown_macOS.tgz

      - name: Upload Mac binary
        id: upload-mac
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: iheidown_macOS.tgz
          asset_name: iheidown_macOS.tgz
          asset_content_type: application/zip

      - name: Rename Linux release
        run: mv ./linuxOS/*.tar.gz iheidown_linuxOS.tar.gz

      - name: Upload Linux binary
        id: upload-lin
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: iheidown_linuxOS.tar.gz
          asset_name: iheidown_linuxOS.tar.gz
          asset_content_type: application/zip

      - name: Rename Windows release
        run: mv ./winOS/*.zip iheidown_winOS.zip

      - name: Upload Windows binary
        id: upload-win
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: iheidown_winOS.zip
          asset_name: iheidown_winOS.zip
          asset_content_type: application/zip

      - name: Upload Thesis Example Asset
        id: upload-thesis-example
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: examples/IHEIDThesisExample.pdf
          asset_name: IHEIDThesisExample.pdf
          asset_content_type: application/pdf

      - name: Upload Syllabus Example Asset
        id: upload-syllabus-example
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SyllabusExample/IHEIDSyllabusExample.pdf
          asset_name: IHEIDSyllabusExample.pdf
          asset_content_type: application/pdf

      - name: Upload problem set Example Asset
        id: upload-PS-example
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ProblemSetExample/IHEIDProblemSetExample.pdf
          asset_name: IHEIDProblemSetExample.pdf
          asset_content_type: application/pdf

  render:
    name: Update README.md and push
    needs: build
    runs-on: macOS-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1

      # install packages needed
      - name: install required packages
        run: Rscript -e 'install.packages("rmarkdown")'

      # Render README.md using rmarkdown
      - name: render README
        run: Rscript -e 'rmarkdown::render("README.Rmd", output_format = "md_document")'
      # Add man/figures/README-* to the git add call if plots are generated
      - name: commit rendered README
        run: |
          git add README.md
          git commit -m "Re-build README.md" || echo "No changes to commit"
          git push origin master || echo "No changes to commit"

  pkgdown:
    name: Build and deploy website
    needs: render
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::rcmdcheck
            any::pkgdown
            any::remotes
          needs: check

      - name: Install package
        run: R CMD INSTALL .

      - name: Setup tinytex
        uses: r-lib/actions/setup-tinytex@main

      - name: Install X11 dependencies on MacOS for pdftools
        run: |
          brew install --cask xquartz

      - name: Install GitHub dependencies
        run: |
          remotes::install_github("crsh/citr")
          remotes::install_github("gadenbuie/xaringanExtra")
          remotes::install_github("giocomai/ganttrify")
          remotes::install_github("mitchelloharawild/icons")
          remotes::install_github("ropensci/RefManageR")
        shell: Rscript {0}

      - name: Render output samples
        run: Rscript R/_render.R

      - name: Deploy package
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'
